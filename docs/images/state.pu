@startuml

state PRECHARGE <<choice>>

[*] -> PCS_INIT

PCS_INIT : wait for VACok \nand after 2sec check if calibration data are valid
PCS_INIT --> PCS_WAIT_IF_FAULT_ACTIVE : Fault Detected
PCS_INIT --> PCS_INIT : VAC not OK
PCS_INIT --> PCS_STANDBY : All OK

PCS_WAIT_IF_FAULT_ACTIVE :stall when current sensor calibration fails
PCS_WAIT_IF_FAULT_ACTIVE --> PCS_WAIT_IF_FAULT_ACTIVE : Stall
PCS_WAIT_IF_FAULT_ACTIVE --> PCS_STALL_DEBUG : VAC not OK

PCS_STANDBY: wait on Run from CAN, then start application \nif autostart then auto starts
PCS_STANDBY --> PCS_STANDBY : waiting for RUN
PCS_STANDBY --> PCS_VACOK : PFC Started

PCS_VACOK:1 sec. delay/wait to insure input is stable \nbefore relay on
PCS_VACOK --> PRECHARGE : after 1 sec
PCS_VACOK --> PCS_VACOK : wait for 1 sec

PRECHARGE --> PCS_VOUTPRELOAD : if PRECHARGE is selected
PRECHARGE --> PCS_RELAYON

PCS_VOUTPRELOAD: Charge Vout with fixed \nopen loop duty cycle \nbefore start control loops
PCS_VOUTPRELOAD --> PCS_RELAYON : Vout Precharged
PCS_VOUTPRELOAD --> PCS_STANDBY : PFC stopped
PCS_VOUTPRELOAD --> PCS_VOUTPRELOAD : Charging .. 
PCS_VOUTPRELOAD --> PCS_STALL_DEBUG : VAC not OK

PCS_RELAYON : 50ms delay/wait \nrelay is switched on
PCS_RELAYON -->PCS_DELAY_AFTER_RELAYON : delay value set
PCS_RELAYON --> PCS_STALL_DEBUG : VAC not OK

PCS_DELAY_AFTER_RELAYON: wait 50ms after relay on \nto be out of relay bouncing
PCS_DELAY_AFTER_RELAYON --> PCS_DELAY_AFTER_RELAYON : waiting for delay value
PCS_DELAY_AFTER_RELAYON --> PCS_START_CONTROL : delay done
PCS_DELAY_AFTER_RELAYON --> PCS_STALL_DEBUG : VAC not OK

PCS_START_CONTROL: wait 50ms delay to initialize controller \nand Vout softstart reference
PCS_START_CONTROL --> PCS_SOFT_START : timer expired
PCS_START_CONTROL --> PCS_START_CONTROL : waiting for 50ms
PCS_START_CONTROL --> PCS_STALL_DEBUG : VAC not OK

PCS_SOFT_START: ramp up/down after startup \nand also when reference is changed.
PCS_SOFT_START --> PCS_SOFT_START : ramping up
PCS_SOFT_START --> PCS_UP_AND_RUNNING : ramped up
PCS_SOFT_START --> PCS_STANDBY : PFC stopped
PCS_SOFT_START --> PCS_STALL_DEBUG : VAC not OK

PCS_UP_AND_RUNNING : Up and running \nand checks if new referece is set
PCS_UP_AND_RUNNING --> PCS_SOFT_START : new refernce value
PCS_UP_AND_RUNNING --> PCS_UP_AND_RUNNING : up and running

PCS_UP_AND_RUNNING --> PCS_STALL_DEBUG : VAC not OK       
        
PCS_STALL_DEBUG ---> PCS_INIT : PFC \nRestarted
@enduml
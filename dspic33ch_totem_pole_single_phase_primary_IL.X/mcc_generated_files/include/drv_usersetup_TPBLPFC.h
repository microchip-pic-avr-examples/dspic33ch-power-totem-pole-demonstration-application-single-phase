/**
  @Company
    Microchip Technology Inc.

  @File Name
    drv_usersetup_TPBLPFC.h

  @Summary
    This is the generated driver implementation file using PIC24 / dsPIC33 / PIC32MM MCUs

  @Description
    This source file provides all the function for the power controller to control and drive the power stage(s).
    Generation Information :
        Product Revision  :  PIC24 / dsPIC33 / PIC32MM MCUs - 1.167.0
        Device            :  dsPIC33CH512MP506S1      
    The generated drivers are tested against the following:
        Compiler          :  XC16 v1.70
        MPLAB 	          :  MPLAB X v6.00
*/

/*
    (c) 2020 Microchip Technology Inc. and its subsidiaries. You may use this
    software and any derivatives exclusively with Microchip products.

    THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
    EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
    WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
    PARTICULAR PURPOSE, OR ITS INTERACTION WITH MICROCHIP PRODUCTS, COMBINATION
    WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION.

    IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
    INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
    WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
    BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
    FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
    ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
    THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.

    MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF THESE
    TERMS.
*/

#ifndef DRV_USERSETUP_TPBLPFC_H
#define	DRV_USERSETUP_TPBLPFC_H

/*******************************************************************************
 * @fn          #ifdefs for mode settings    
 * @brief       settings coming from Totem-Pole PFC Solution Configuration
 * @details     #ifdefs generated by GUI si copied to clipboard
 *              paste the clipboard
 *              
 *******************************************************************************/

//lines above are copied from TextFile1. Is there a way that they are auto generated from melody.

//How to get current datetime??//
//incomplete -> will try to follow the generated file from the

// Current Sensor: 0.025 V/A 
// Single Phase L1 PFC
#define HIGH_VOLTAGE 0
//// <<< CHECK CURRENT LOOP Pole#0 
//#define SINGLE_PHASE_L1 
//#undef SINGLE_PHASE_IL_L1_L3 
//#undef THREE_PHASE 
//#define VIN_AC
//#define VOLTAGE_LOOP
//#undef GRID_TIED_INVERTER
//
//#define RECTIFIER_SWITCH_ENABLED
//#define CLOSED_LOOP
//#define DUTY_RATIO_FEEDFORWARD_ENABLED
////<<< BurstMode 
//#undef AC_CYCLE_SKIPPING_ENABLED
////<<< dV/dt 
//#undef ADAPTIVE_STEPRESPONSE_ENABLED
//#undef AUTO_START 
//#undef POWERSMART_USAGE
//#define VOUT_REF 1490// 40V 
//#define IIN_OC 931// 30A 
//#define VOUT_OV 3352// 90V 
//#define CCM_CURRENT 63// 2A 
//#define DEAD_TIME 320// 80ns 
//
//// FRANZ: leave them fixed in for now!
//#define BURST_MODE_VMC_REF_FREEZE 800
//#define BURST_MODE_LEVEL_HIGH 500
//#define BURST_MODE_LEVEL_MIDDLE 400
//#define BURST_MODE_LEVEL_LOW 300
//#define BURST_MODE_OFF_CYCLES_LEVEL_HIGH 9
//#define BURST_MODE_OFF_CYCLES_LEVEL_MIDDLE 7
//#define BURST_MODE_OFF_CYCLES_LEVEL_LOW 5
//
//#define VOUT_HYSTERETIC_RAMP_VALUE_LOW 75
//#define VOUT_HYSTERETIC_RAMP_VALUE_MIDDLE 75
//#define VOUT_HYSTERETIC_RAMP_VALUE_HIGH 125
//#define VOUT_HYSTERETIC_VMC_REF_MAX_OFF_CYCLES_LOW 0
//#define VOUT_HYSTERETIC_VMC_REF_MAX_OFF_CYCLES_MIDDLE 1
//#define VOUT_HYSTERETIC_VMC_REF_MAX_OFF_CYCLES_HIGH 2
//
#define CANSendID 0x202
#define CANReceiveID 0x203

//following lines are from TextFile2.txt

/*******************************************************************************
 * @fn          definitions for MCC API's    
 * @brief       
 * @details     
 *              
 *              
 *******************************************************************************/

#define PH1_PWM 1
#define PH2_PWM 2
#define PH3_PWM 3

//#define VoltageLoopPIM

/*******************************************************************************
 * @fn          open loop startup after ZC    
 * @brief       
 * @details     in function SoftstartAfterZC_PHx are the settings for the
 *              open loop startup used
 *              
 *******************************************************************************/

#ifdef THREE_PHASE
    #define OPEN_LOOP_STARTUP_PULSES 3
    #define OPEN_LOOP_PWM_COUNTER_SHIFT 11
#else
    #define OPEN_LOOP_STARTUP_PULSES 10
    #define OPEN_LOOP_PWM_COUNTER_SHIFT 11
#endif

//==============================================================================
//==============================================================================

#endif	/* DRV_USERSETUP_TPBLPFC_H */
